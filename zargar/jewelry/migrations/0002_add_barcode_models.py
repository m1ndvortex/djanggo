# Generated by Django 4.2.24 on 2025-09-22 15:42

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('jewelry', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BarcodeGeneration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the record was created', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated', verbose_name='Updated At')),
                ('barcode_type', models.CharField(choices=[('ean13', 'EAN-13'), ('code128', 'Code 128'), ('qr_code', 'QR Code'), ('custom', 'Custom')], default='qr_code', max_length=20, verbose_name='Barcode Type')),
                ('barcode_data', models.CharField(help_text='The data encoded in the barcode', max_length=500, verbose_name='Barcode Data')),
                ('barcode_image', models.FileField(blank=True, null=True, upload_to='barcodes/%Y/%m/', verbose_name='Barcode Image')),
                ('generation_date', models.DateTimeField(auto_now_add=True, verbose_name='Generation Date')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('jewelry_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='barcode_generations', to='jewelry.jewelryitem', verbose_name='Jewelry Item')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated By')),
            ],
            options={
                'verbose_name': 'Barcode Generation',
                'verbose_name_plural': 'Barcode Generations',
                'ordering': ['-generation_date'],
            },
        ),
        migrations.CreateModel(
            name='BarcodeSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the record was created', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated', verbose_name='Updated At')),
                ('auto_generate_on_create', models.BooleanField(default=True, verbose_name='Auto Generate on Item Create')),
                ('default_barcode_type', models.CharField(choices=[('ean13', 'EAN-13'), ('code128', 'Code 128'), ('qr_code', 'QR Code'), ('custom', 'Custom')], default='qr_code', max_length=20, verbose_name='Default Barcode Type')),
                ('include_tenant_prefix', models.BooleanField(default=True, verbose_name='Include Tenant Prefix')),
                ('tenant_prefix', models.CharField(blank=True, max_length=10, validators=[django.core.validators.RegexValidator(message='Prefix must contain only uppercase letters and numbers', regex='^[A-Z0-9]*$')], verbose_name='Tenant Prefix')),
                ('qr_code_size', models.PositiveIntegerField(default=200, verbose_name='QR Code Size (pixels)')),
                ('barcode_width', models.PositiveIntegerField(default=300, verbose_name='Barcode Width (pixels)')),
                ('barcode_height', models.PositiveIntegerField(default=100, verbose_name='Barcode Height (pixels)')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated By')),
            ],
            options={
                'verbose_name': 'Barcode Settings',
                'verbose_name_plural': 'Barcode Settings',
            },
        ),
        migrations.CreateModel(
            name='BarcodeTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the record was created', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated', verbose_name='Updated At')),
                ('name', models.CharField(max_length=100, verbose_name='Template Name')),
                ('barcode_type', models.CharField(choices=[('ean13', 'EAN-13'), ('code128', 'Code 128'), ('qr_code', 'QR Code'), ('custom', 'Custom')], max_length=20, verbose_name='Barcode Type')),
                ('data_format', models.CharField(help_text='Template for barcode data (e.g., {sku}-{category}-{date})', max_length=200, verbose_name='Data Format')),
                ('include_item_name', models.BooleanField(default=True, verbose_name='Include Item Name')),
                ('include_sku', models.BooleanField(default=True, verbose_name='Include SKU')),
                ('include_category', models.BooleanField(default=False, verbose_name='Include Category')),
                ('include_weight', models.BooleanField(default=False, verbose_name='Include Weight')),
                ('include_karat', models.BooleanField(default=False, verbose_name='Include Karat')),
                ('include_price', models.BooleanField(default=False, verbose_name='Include Price')),
                ('is_default', models.BooleanField(default=False, verbose_name='Is Default Template')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated By')),
            ],
            options={
                'verbose_name': 'Barcode Template',
                'verbose_name_plural': 'Barcode Templates',
                'unique_together': {('name',)},
            },
        ),
        migrations.CreateModel(
            name='BarcodeScanHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the record was created', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated', verbose_name='Updated At')),
                ('scanned_data', models.CharField(max_length=500, verbose_name='Scanned Data')),
                ('scan_action', models.CharField(choices=[('inventory_check', 'Inventory Check'), ('sale', 'Sale'), ('return', 'Return'), ('transfer', 'Transfer'), ('audit', 'Audit'), ('lookup', 'Lookup'), ('other', 'Other')], default='lookup', max_length=20, verbose_name='Scan Action')),
                ('scan_timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Scan Timestamp')),
                ('scanner_device', models.CharField(blank=True, help_text='Device used for scanning (e.g., mobile app, handheld scanner)', max_length=100, verbose_name='Scanner Device')),
                ('location', models.CharField(blank=True, help_text='Physical location where scan occurred', max_length=100, verbose_name='Scan Location')),
                ('notes', models.TextField(blank=True, verbose_name='Scan Notes')),
                ('barcode_generation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='jewelry.barcodegeneration', verbose_name='Barcode Generation')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('jewelry_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scan_history', to='jewelry.jewelryitem', verbose_name='Jewelry Item')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated By')),
            ],
            options={
                'verbose_name': 'Barcode Scan History',
                'verbose_name_plural': 'Barcode Scan Histories',
                'ordering': ['-scan_timestamp'],
                'indexes': [models.Index(fields=['jewelry_item', 'scan_timestamp'], name='jewelry_bar_jewelry_414580_idx'), models.Index(fields=['scan_action'], name='jewelry_bar_scan_ac_928ffc_idx'), models.Index(fields=['scan_timestamp'], name='jewelry_bar_scan_ti_1ffe28_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='barcodegeneration',
            index=models.Index(fields=['jewelry_item', 'is_active'], name='jewelry_bar_jewelry_b892ae_idx'),
        ),
        migrations.AddIndex(
            model_name='barcodegeneration',
            index=models.Index(fields=['barcode_type'], name='jewelry_bar_barcode_c2b40e_idx'),
        ),
        migrations.AddIndex(
            model_name='barcodegeneration',
            index=models.Index(fields=['generation_date'], name='jewelry_bar_generat_f308c3_idx'),
        ),
    ]
