# Generated by Django 4.2.24 on 2025-09-22 08:41

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('reports', '0002_remove_reportgeneration_created_by_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='GeneratedReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the record was created', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated', verbose_name='Updated At')),
                ('report_id', models.CharField(max_length=50, unique=True, verbose_name='Report ID')),
                ('generated_at', models.DateTimeField(auto_now_add=True, verbose_name='Generated At')),
                ('report_parameters', models.JSONField(default=dict, help_text='Parameters used for report generation', verbose_name='Report Parameters')),
                ('date_from', models.DateField(blank=True, null=True, verbose_name='Date From')),
                ('date_to', models.DateField(blank=True, null=True, verbose_name='Date To')),
                ('date_from_shamsi', models.CharField(blank=True, max_length=10, verbose_name='Date From (Shamsi)')),
                ('date_to_shamsi', models.CharField(blank=True, max_length=10, verbose_name='Date To (Shamsi)')),
                ('output_format', models.CharField(choices=[('pdf', 'PDF'), ('excel', 'Excel'), ('csv', 'CSV'), ('json', 'JSON')], max_length=10, verbose_name='Output Format')),
                ('file_path', models.CharField(blank=True, max_length=500, verbose_name='File Path')),
                ('file_size_bytes', models.PositiveIntegerField(blank=True, null=True, verbose_name='File Size (Bytes)')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('generating', 'Generating'), ('completed', 'Completed'), ('failed', 'Failed'), ('expired', 'Expired')], default='pending', max_length=20, verbose_name='Status')),
                ('generation_started_at', models.DateTimeField(blank=True, null=True, verbose_name='Generation Started At')),
                ('generation_completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Generation Completed At')),
                ('generation_duration_seconds', models.PositiveIntegerField(blank=True, null=True, verbose_name='Generation Duration (Seconds)')),
                ('error_message', models.TextField(blank=True, verbose_name='Error Message')),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name='Expires At')),
                ('report_data', models.JSONField(blank=True, help_text='Cached report data for quick access', null=True, verbose_name='Report Data')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('generated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='generated_reports', to=settings.AUTH_USER_MODEL, verbose_name='Generated By')),
            ],
            options={
                'verbose_name': 'Generated Report',
                'verbose_name_plural': 'Generated Reports',
                'ordering': ['-generated_at'],
            },
        ),
        migrations.CreateModel(
            name='ReportTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the record was created', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated', verbose_name='Updated At')),
                ('name', models.CharField(max_length=200, verbose_name='Template Name')),
                ('name_persian', models.CharField(max_length=200, verbose_name='Persian Template Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('report_type', models.CharField(choices=[('trial_balance', 'Trial Balance (ترازنامه آزمایشی)'), ('profit_loss', 'Profit & Loss Statement (سود و زیان)'), ('balance_sheet', 'Balance Sheet (ترازنامه)'), ('inventory_valuation', 'Inventory Valuation (ارزش\u200cگذاری موجودی)'), ('customer_aging', 'Customer Aging Report (تحلیل سن مطالبات)'), ('sales_summary', 'Sales Summary (خلاصه فروش)'), ('gold_price_analysis', 'Gold Price Analysis (تحلیل قیمت طلا)'), ('installment_summary', 'Installment Summary (خلاصه اقساط)'), ('custom', 'Custom Report (گزارش سفارشی)')], max_length=30, verbose_name='Report Type')),
                ('default_output_format', models.CharField(choices=[('pdf', 'PDF'), ('excel', 'Excel'), ('csv', 'CSV'), ('json', 'JSON')], default='pdf', max_length=10, verbose_name='Default Output Format')),
                ('template_config', models.JSONField(default=dict, help_text='JSON configuration for report parameters', verbose_name='Template Configuration')),
                ('include_persian_headers', models.BooleanField(default=True, verbose_name='Include Persian Headers')),
                ('use_shamsi_dates', models.BooleanField(default=True, verbose_name='Use Shamsi Dates')),
                ('use_persian_numbers', models.BooleanField(default=True, verbose_name='Use Persian Numbers')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('is_system_template', models.BooleanField(default=False, help_text='System templates cannot be deleted', verbose_name='Is System Template')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated By')),
            ],
            options={
                'verbose_name': 'Report Template',
                'verbose_name_plural': 'Report Templates',
                'ordering': ['report_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ReportSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the record was created', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated', verbose_name='Updated At')),
                ('name', models.CharField(max_length=200, verbose_name='Schedule Name')),
                ('name_persian', models.CharField(max_length=200, verbose_name='Persian Schedule Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('schedule_parameters', models.JSONField(default=dict, verbose_name='Schedule Parameters')),
                ('frequency', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('yearly', 'Yearly')], max_length=20, verbose_name='Frequency')),
                ('start_date', models.DateField(verbose_name='Start Date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End Date')),
                ('execution_time', models.TimeField(default='08:00:00', help_text='Time of day to generate report', verbose_name='Execution Time')),
                ('day_of_week', models.IntegerField(blank=True, help_text='0=Monday, 6=Sunday (for weekly reports)', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(6)], verbose_name='Day of Week')),
                ('day_of_month', models.IntegerField(blank=True, help_text='Day of month to generate report (for monthly reports)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(31)], verbose_name='Day of Month')),
                ('delivery_methods', models.JSONField(default=list, help_text='List of delivery methods', verbose_name='Delivery Methods')),
                ('email_recipients', models.JSONField(default=list, help_text='List of email addresses for delivery', verbose_name='Email Recipients')),
                ('sms_recipients', models.JSONField(default=list, help_text='List of phone numbers for SMS delivery', verbose_name='SMS Recipients')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('last_execution', models.DateTimeField(blank=True, null=True, verbose_name='Last Execution')),
                ('next_execution', models.DateTimeField(blank=True, null=True, verbose_name='Next Execution')),
                ('total_executions', models.PositiveIntegerField(default=0, verbose_name='Total Executions')),
                ('successful_executions', models.PositiveIntegerField(default=0, verbose_name='Successful Executions')),
                ('failed_executions', models.PositiveIntegerField(default=0, verbose_name='Failed Executions')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='reports.reporttemplate', verbose_name='Report Template')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated By')),
            ],
            options={
                'verbose_name': 'Report Schedule',
                'verbose_name_plural': 'Report Schedules',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ReportDelivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the record was created', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated', verbose_name='Updated At')),
                ('delivery_method', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('internal', 'Internal Dashboard'), ('file_storage', 'File Storage')], max_length=20, verbose_name='Delivery Method')),
                ('recipient', models.CharField(help_text='Email address or phone number', max_length=200, verbose_name='Recipient')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('failed', 'Failed'), ('bounced', 'Bounced')], default='pending', max_length=20, verbose_name='Delivery Status')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='Sent At')),
                ('delivered_at', models.DateTimeField(blank=True, null=True, verbose_name='Delivered At')),
                ('error_message', models.TextField(blank=True, verbose_name='Error Message')),
                ('retry_count', models.PositiveIntegerField(default=0, verbose_name='Retry Count')),
                ('max_retries', models.PositiveIntegerField(default=3, verbose_name='Max Retries')),
                ('delivery_metadata', models.JSONField(default=dict, help_text='Additional delivery information', verbose_name='Delivery Metadata')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('generated_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deliveries', to='reports.generatedreport', verbose_name='Generated Report')),
                ('schedule', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deliveries', to='reports.reportschedule', verbose_name='Report Schedule')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated By')),
            ],
            options={
                'verbose_name': 'Report Delivery',
                'verbose_name_plural': 'Report Deliveries',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='generatedreport',
            name='template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='generated_reports', to='reports.reporttemplate', verbose_name='Report Template'),
        ),
        migrations.AddField(
            model_name='generatedreport',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated By'),
        ),
        migrations.AddIndex(
            model_name='reporttemplate',
            index=models.Index(fields=['report_type'], name='reports_rep_report__f68e8c_idx'),
        ),
        migrations.AddIndex(
            model_name='reporttemplate',
            index=models.Index(fields=['is_active'], name='reports_rep_is_acti_4b0ce5_idx'),
        ),
        migrations.AddIndex(
            model_name='reportschedule',
            index=models.Index(fields=['is_active'], name='reports_rep_is_acti_7832b3_idx'),
        ),
        migrations.AddIndex(
            model_name='reportschedule',
            index=models.Index(fields=['next_execution'], name='reports_rep_next_ex_19774c_idx'),
        ),
        migrations.AddIndex(
            model_name='reportschedule',
            index=models.Index(fields=['frequency'], name='reports_rep_frequen_1e97ea_idx'),
        ),
        migrations.AddIndex(
            model_name='reportdelivery',
            index=models.Index(fields=['generated_report'], name='reports_rep_generat_f8c248_idx'),
        ),
        migrations.AddIndex(
            model_name='reportdelivery',
            index=models.Index(fields=['status'], name='reports_rep_status_c56f27_idx'),
        ),
        migrations.AddIndex(
            model_name='reportdelivery',
            index=models.Index(fields=['delivery_method'], name='reports_rep_deliver_8996e6_idx'),
        ),
        migrations.AddIndex(
            model_name='generatedreport',
            index=models.Index(fields=['report_id'], name='reports_gen_report__9d065b_idx'),
        ),
        migrations.AddIndex(
            model_name='generatedreport',
            index=models.Index(fields=['template'], name='reports_gen_templat_835a8f_idx'),
        ),
        migrations.AddIndex(
            model_name='generatedreport',
            index=models.Index(fields=['status'], name='reports_gen_status_b3120a_idx'),
        ),
        migrations.AddIndex(
            model_name='generatedreport',
            index=models.Index(fields=['generated_at'], name='reports_gen_generat_e560f3_idx'),
        ),
        migrations.AddIndex(
            model_name='generatedreport',
            index=models.Index(fields=['expires_at'], name='reports_gen_expires_a93554_idx'),
        ),
    ]
