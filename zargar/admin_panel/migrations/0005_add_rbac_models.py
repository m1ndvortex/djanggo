# Generated by Django 4.2.24 on 2025-09-24 18:04

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('admin_panel', '0004_systemhealthalert_systemhealthmetric_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='RolePermissionAuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('role_created', 'Role Created'), ('role_updated', 'Role Updated'), ('role_deleted', 'Role Deleted'), ('permission_created', 'Permission Created'), ('permission_updated', 'Permission Updated'), ('permission_deleted', 'Permission Deleted'), ('role_assigned', 'Role Assigned to User'), ('role_revoked', 'Role Revoked from User'), ('permission_granted', 'Permission Granted to Role'), ('permission_removed', 'Permission Removed from Role')], max_length=50, verbose_name='Action')),
                ('object_type', models.CharField(help_text='Type of object that was modified (role, permission, assignment)', max_length=50, verbose_name='Object Type')),
                ('object_id', models.PositiveIntegerField(help_text='ID of the object that was modified', verbose_name='Object ID')),
                ('object_name', models.CharField(help_text='Name of the object that was modified', max_length=200, verbose_name='Object Name')),
                ('performed_by_id', models.IntegerField(help_text='ID of the super admin who performed this action', verbose_name='Performed By ID')),
                ('performed_by_username', models.CharField(help_text='Username of the super admin who performed this action', max_length=150, verbose_name='Performed By Username')),
                ('old_values', models.JSONField(blank=True, default=dict, help_text='Previous values before the change', verbose_name='Old Values')),
                ('new_values', models.JSONField(blank=True, default=dict, help_text='New values after the change', verbose_name='New Values')),
                ('details', models.JSONField(blank=True, default=dict, help_text='Additional context about the change', verbose_name='Additional Details')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP Address')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Timestamp')),
            ],
            options={
                'verbose_name': 'Role Permission Audit Log',
                'verbose_name_plural': 'Role Permission Audit Logs',
                'db_table': 'admin_panel_role_permission_audit_log',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='SuperAdminPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codename', models.CharField(help_text='Unique identifier for this permission (e.g., "tenants.view", "security.manage")', max_length=100, unique=True, verbose_name='Permission Codename')),
                ('name', models.CharField(help_text='Human-readable permission name', max_length=255, verbose_name='Permission Name')),
                ('name_persian', models.CharField(help_text='Persian translation of permission name', max_length=255, verbose_name='Persian Permission Name')),
                ('section', models.CharField(choices=[('dashboard', 'Dashboard'), ('tenants', 'Tenant Management'), ('users', 'User Management'), ('billing', 'Billing & Subscriptions'), ('security', 'Security & Audit'), ('settings', 'System Settings'), ('backup', 'Backup Management'), ('monitoring', 'System Monitoring'), ('reports', 'Reports & Analytics'), ('integrations', 'Integrations & API')], help_text='Super admin panel section this permission applies to', max_length=50, verbose_name='Section')),
                ('action', models.CharField(choices=[('view', 'View'), ('create', 'Create'), ('edit', 'Edit'), ('delete', 'Delete'), ('export', 'Export'), ('import', 'Import'), ('manage', 'Full Management')], help_text='Type of action this permission allows', max_length=20, verbose_name='Action')),
                ('description', models.TextField(blank=True, help_text='Detailed description of what this permission allows', verbose_name='Description')),
                ('description_persian', models.TextField(blank=True, help_text='Persian description of what this permission allows', verbose_name='Persian Description')),
                ('is_dangerous', models.BooleanField(default=False, help_text='Mark as dangerous permission requiring extra confirmation', verbose_name='Is Dangerous')),
                ('requires_2fa', models.BooleanField(default=False, help_text='Requires two-factor authentication to use this permission', verbose_name='Requires 2FA')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by_id', models.IntegerField(blank=True, help_text='ID of the super admin who created this permission', null=True, verbose_name='Created By ID')),
                ('created_by_username', models.CharField(blank=True, help_text='Username of the super admin who created this permission', max_length=150, verbose_name='Created By Username')),
            ],
            options={
                'verbose_name': 'Super Admin Permission',
                'verbose_name_plural': 'Super Admin Permissions',
                'db_table': 'admin_panel_super_admin_permission',
                'ordering': ['section', 'action', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SuperAdminRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Unique role name (e.g., "Security Manager", "Billing Admin")', max_length=100, unique=True, verbose_name='Role Name')),
                ('name_persian', models.CharField(help_text='Persian translation of role name', max_length=100, verbose_name='Persian Role Name')),
                ('description', models.TextField(blank=True, help_text='Detailed description of this role and its responsibilities', verbose_name='Description')),
                ('description_persian', models.TextField(blank=True, help_text='Persian description of this role and its responsibilities', verbose_name='Persian Description')),
                ('role_type', models.CharField(choices=[('system', 'System Role'), ('custom', 'Custom Role')], default='custom', help_text='System roles cannot be deleted, custom roles can be modified', max_length=20, verbose_name='Role Type')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('is_default', models.BooleanField(default=False, help_text='Automatically assign this role to new super admins', verbose_name='Is Default Role')),
                ('max_users', models.PositiveIntegerField(blank=True, help_text='Maximum number of users that can have this role (optional)', null=True, verbose_name='Maximum Users')),
                ('requires_2fa', models.BooleanField(default=False, help_text='Users with this role must have 2FA enabled', verbose_name='Requires 2FA')),
                ('session_timeout_minutes', models.PositiveIntegerField(blank=True, help_text='Custom session timeout for users with this role', null=True, verbose_name='Session Timeout (Minutes)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by_id', models.IntegerField(blank=True, help_text='ID of the super admin who created this role', null=True, verbose_name='Created By ID')),
                ('created_by_username', models.CharField(blank=True, help_text='Username of the super admin who created this role', max_length=150, verbose_name='Created By Username')),
                ('parent_role', models.ForeignKey(blank=True, help_text='Parent role for permission inheritance', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child_roles', to='admin_panel.superadminrole', verbose_name='Parent Role')),
                ('permissions', models.ManyToManyField(blank=True, help_text='Permissions granted to users with this role', related_name='roles', to='admin_panel.superadminpermission', verbose_name='Permissions')),
            ],
            options={
                'verbose_name': 'Super Admin Role',
                'verbose_name_plural': 'Super Admin Roles',
                'db_table': 'admin_panel_super_admin_role',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SuperAdminUserRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(help_text='ID of the SuperAdmin user', verbose_name='Super Admin User ID')),
                ('user_username', models.CharField(help_text='Username of the SuperAdmin user for easier querying', max_length=150, verbose_name='Username')),
                ('assigned_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Assigned At')),
                ('assigned_by_id', models.IntegerField(blank=True, help_text='ID of the super admin who assigned this role', null=True, verbose_name='Assigned By ID')),
                ('assigned_by_username', models.CharField(blank=True, help_text='Username of the super admin who assigned this role', max_length=150, verbose_name='Assigned By Username')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('expires_at', models.DateTimeField(blank=True, help_text='Optional expiration date for temporary role assignments', null=True, verbose_name='Expires At')),
                ('assignment_reason', models.TextField(blank=True, help_text='Reason for assigning this role to the user', verbose_name='Assignment Reason')),
                ('notes', models.TextField(blank=True, help_text='Additional notes about this role assignment', verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_roles', to='admin_panel.superadminrole', verbose_name='Role')),
            ],
            options={
                'verbose_name': 'Super Admin User Role',
                'verbose_name_plural': 'Super Admin User Roles',
                'db_table': 'admin_panel_super_admin_user_role',
                'ordering': ['-assigned_at'],
            },
        ),
        migrations.AddIndex(
            model_name='superadminpermission',
            index=models.Index(fields=['codename'], name='admin_panel_codenam_eb5db9_idx'),
        ),
        migrations.AddIndex(
            model_name='superadminpermission',
            index=models.Index(fields=['section', 'action'], name='admin_panel_section_eed573_idx'),
        ),
        migrations.AddIndex(
            model_name='superadminpermission',
            index=models.Index(fields=['is_active'], name='admin_panel_is_acti_103dda_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='superadminpermission',
            unique_together={('section', 'action', 'codename')},
        ),
        migrations.AddIndex(
            model_name='rolepermissionauditlog',
            index=models.Index(fields=['action', 'timestamp'], name='admin_panel_action_154aa5_idx'),
        ),
        migrations.AddIndex(
            model_name='rolepermissionauditlog',
            index=models.Index(fields=['object_type', 'object_id'], name='admin_panel_object__b70249_idx'),
        ),
        migrations.AddIndex(
            model_name='rolepermissionauditlog',
            index=models.Index(fields=['performed_by_id', 'timestamp'], name='admin_panel_perform_137548_idx'),
        ),
        migrations.AddIndex(
            model_name='rolepermissionauditlog',
            index=models.Index(fields=['timestamp'], name='admin_panel_timesta_fe711f_idx'),
        ),
        migrations.AddIndex(
            model_name='superadminuserrole',
            index=models.Index(fields=['user_id', 'is_active'], name='admin_panel_user_id_c8a731_idx'),
        ),
        migrations.AddIndex(
            model_name='superadminuserrole',
            index=models.Index(fields=['role', 'is_active'], name='admin_panel_role_id_0dd227_idx'),
        ),
        migrations.AddIndex(
            model_name='superadminuserrole',
            index=models.Index(fields=['assigned_at'], name='admin_panel_assigne_cf2107_idx'),
        ),
        migrations.AddIndex(
            model_name='superadminuserrole',
            index=models.Index(fields=['expires_at'], name='admin_panel_expires_9c5576_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='superadminuserrole',
            unique_together={('user_id', 'role')},
        ),
        migrations.AddIndex(
            model_name='superadminrole',
            index=models.Index(fields=['name'], name='admin_panel_name_090e48_idx'),
        ),
        migrations.AddIndex(
            model_name='superadminrole',
            index=models.Index(fields=['role_type'], name='admin_panel_role_ty_caea71_idx'),
        ),
        migrations.AddIndex(
            model_name='superadminrole',
            index=models.Index(fields=['is_active'], name='admin_panel_is_acti_88639f_idx'),
        ),
        migrations.AddIndex(
            model_name='superadminrole',
            index=models.Index(fields=['is_default'], name='admin_panel_is_defa_9bcb2e_idx'),
        ),
    ]
