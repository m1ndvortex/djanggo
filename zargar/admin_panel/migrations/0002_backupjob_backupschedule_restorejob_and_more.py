# Generated by Django 4.2.24 on 2025-09-20 21:09

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('admin_panel', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BackupJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_id', models.UUIDField(default=uuid.uuid4, help_text='Unique identifier for this backup job', unique=True, verbose_name='Job ID')),
                ('name', models.CharField(help_text='Human-readable name for this backup', max_length=200, verbose_name='Backup Name')),
                ('backup_type', models.CharField(choices=[('full_system', 'Full System Backup'), ('tenant_only', 'Single Tenant Backup'), ('configuration', 'Configuration Backup'), ('database_only', 'Database Only Backup')], max_length=20, verbose_name='Backup Type')),
                ('frequency', models.CharField(choices=[('manual', 'Manual'), ('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly')], default='manual', max_length=20, verbose_name='Backup Frequency')),
                ('scheduled_time', models.TimeField(blank=True, help_text='Time of day for automatic backups', null=True, verbose_name='Scheduled Time')),
                ('next_run', models.DateTimeField(blank=True, null=True, verbose_name='Next Scheduled Run')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20, verbose_name='Status')),
                ('started_at', models.DateTimeField(blank=True, null=True, verbose_name='Started At')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Completed At')),
                ('tenant_schema', models.CharField(blank=True, help_text='Specific tenant schema for tenant-only backups', max_length=100, verbose_name='Tenant Schema')),
                ('file_path', models.CharField(blank=True, help_text='Path to the backup file in storage', max_length=500, verbose_name='Backup File Path')),
                ('file_size_bytes', models.BigIntegerField(blank=True, null=True, verbose_name='File Size (Bytes)')),
                ('storage_backends', models.JSONField(default=list, help_text='List of storage backends where backup is stored', verbose_name='Storage Backends')),
                ('progress_percentage', models.PositiveIntegerField(default=0, verbose_name='Progress Percentage')),
                ('log_messages', models.JSONField(default=list, help_text='Array of log messages from backup process', verbose_name='Log Messages')),
                ('error_message', models.TextField(blank=True, verbose_name='Error Message')),
                ('metadata', models.JSONField(default=dict, help_text='Additional metadata about the backup', verbose_name='Backup Metadata')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by_id', models.IntegerField(blank=True, help_text='ID of the user who created this backup', null=True, verbose_name='Created By ID')),
                ('created_by_username', models.CharField(blank=True, help_text='Username of the user who created this backup', max_length=150, verbose_name='Created By Username')),
            ],
            options={
                'verbose_name': 'Backup Job',
                'verbose_name_plural': 'Backup Jobs',
                'db_table': 'admin_backup_job',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BackupSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Schedule Name')),
                ('backup_type', models.CharField(choices=[('full_system', 'Full System Backup'), ('tenant_only', 'Single Tenant Backup'), ('configuration', 'Configuration Backup'), ('database_only', 'Database Only Backup')], max_length=20, verbose_name='Backup Type')),
                ('frequency', models.CharField(choices=[('manual', 'Manual'), ('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly')], max_length=20, verbose_name='Frequency')),
                ('scheduled_time', models.TimeField(verbose_name='Scheduled Time')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('retention_days', models.PositiveIntegerField(default=30, help_text='Number of days to keep backups', verbose_name='Retention Days')),
                ('max_backups', models.PositiveIntegerField(default=10, help_text='Maximum number of backups to keep', verbose_name='Maximum Backups')),
                ('notify_on_success', models.BooleanField(default=False, verbose_name='Notify on Success')),
                ('notify_on_failure', models.BooleanField(default=True, verbose_name='Notify on Failure')),
                ('notification_emails', models.JSONField(default=list, help_text='List of email addresses for notifications', verbose_name='Notification Emails')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by_id', models.IntegerField(blank=True, help_text='ID of the user who created this schedule', null=True, verbose_name='Created By ID')),
                ('created_by_username', models.CharField(blank=True, help_text='Username of the user who created this schedule', max_length=150, verbose_name='Created By Username')),
            ],
            options={
                'verbose_name': 'Backup Schedule',
                'verbose_name_plural': 'Backup Schedules',
                'db_table': 'admin_backup_schedule',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='RestoreJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_id', models.UUIDField(default=uuid.uuid4, unique=True, verbose_name='Job ID')),
                ('restore_type', models.CharField(choices=[('full_system', 'Full System Restore'), ('single_tenant', 'Single Tenant Restore'), ('configuration', 'Configuration Restore')], max_length=20, verbose_name='Restore Type')),
                ('target_tenant_schema', models.CharField(blank=True, help_text='Target tenant schema for single tenant restore', max_length=100, verbose_name='Target Tenant Schema')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20, verbose_name='Status')),
                ('started_at', models.DateTimeField(blank=True, null=True, verbose_name='Started At')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Completed At')),
                ('progress_percentage', models.PositiveIntegerField(default=0, verbose_name='Progress Percentage')),
                ('log_messages', models.JSONField(default=list, verbose_name='Log Messages')),
                ('error_message', models.TextField(blank=True, verbose_name='Error Message')),
                ('confirmation_token', models.CharField(blank=True, help_text='Token required for dangerous restore operations', max_length=100, verbose_name='Confirmation Token')),
                ('confirmed_by_typing', models.CharField(blank=True, help_text='Text that user typed to confirm restore', max_length=200, verbose_name='Confirmed by Typing')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by_id', models.IntegerField(blank=True, help_text='ID of the user who created this restore job', null=True, verbose_name='Created By ID')),
                ('created_by_username', models.CharField(blank=True, help_text='Username of the user who created this restore job', max_length=150, verbose_name='Created By Username')),
                ('source_backup', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_panel.backupjob', verbose_name='Source Backup')),
            ],
            options={
                'verbose_name': 'Restore Job',
                'verbose_name_plural': 'Restore Jobs',
                'db_table': 'admin_restore_job',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='backupjob',
            index=models.Index(fields=['status', 'created_at'], name='admin_backu_status_ed96bd_idx'),
        ),
        migrations.AddIndex(
            model_name='backupjob',
            index=models.Index(fields=['backup_type', 'status'], name='admin_backu_backup__9fc395_idx'),
        ),
        migrations.AddIndex(
            model_name='backupjob',
            index=models.Index(fields=['frequency', 'next_run'], name='admin_backu_frequen_372e7d_idx'),
        ),
        migrations.AddIndex(
            model_name='backupjob',
            index=models.Index(fields=['job_id'], name='admin_backu_job_id_f88ddd_idx'),
        ),
    ]
