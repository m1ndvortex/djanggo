# Generated by Django 4.2.24 on 2025-09-20 17:04

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0008_rename_core_audit__user_id_b8e7b8_idx_core_audit__user_id_da8961_idx_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='BackupSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Schedule Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('schedule_type', models.CharField(choices=[('full_system', 'Full System Backup'), ('tenant_only', 'Single Tenant Backup'), ('configuration', 'Configuration Backup')], max_length=20, verbose_name='Schedule Type')),
                ('frequency', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly')], max_length=20, verbose_name='Frequency')),
                ('hour', models.IntegerField(default=3, help_text='Hour of day to run backup (0-23)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(23)], verbose_name='Hour (24h format)')),
                ('minute', models.IntegerField(default=0, help_text='Minute of hour to run backup (0-59)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(59)], verbose_name='Minute')),
                ('day_of_week', models.IntegerField(blank=True, help_text='Day of week for weekly backups (0=Monday, 6=Sunday)', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(6)], verbose_name='Day of Week')),
                ('day_of_month', models.IntegerField(blank=True, help_text='Day of month for monthly backups (1-31)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(31)], verbose_name='Day of Month')),
                ('tenant_schema', models.CharField(blank=True, help_text='Schema name for tenant-specific backup schedules', max_length=100, null=True, verbose_name='Tenant Schema')),
                ('retention_days', models.IntegerField(default=30, help_text='Number of days to keep backups', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(365)], verbose_name='Retention Days')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('last_run_at', models.DateTimeField(blank=True, null=True, verbose_name='Last Run At')),
                ('next_run_at', models.DateTimeField(blank=True, null=True, verbose_name='Next Run At')),
                ('last_backup_id', models.CharField(blank=True, help_text='ID of the last backup created by this schedule', max_length=100, verbose_name='Last Backup ID')),
                ('total_runs', models.IntegerField(default=0, verbose_name='Total Runs')),
                ('successful_runs', models.IntegerField(default=0, verbose_name='Successful Runs')),
                ('failed_runs', models.IntegerField(default=0, verbose_name='Failed Runs')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Backup Schedule',
                'verbose_name_plural': 'Backup Schedules',
                'db_table': 'core_backup_schedule',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['is_active', 'next_run_at'], name='core_backup_is_acti_7d4add_idx'), models.Index(fields=['schedule_type'], name='core_backup_schedul_ccd0d7_idx'), models.Index(fields=['tenant_schema'], name='core_backup_tenant__25a3d2_idx')],
            },
        ),
        migrations.CreateModel(
            name='BackupRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('backup_id', models.CharField(help_text='Unique identifier for this backup', max_length=100, unique=True, verbose_name='Backup ID')),
                ('backup_type', models.CharField(choices=[('full_system', 'Full System Backup'), ('tenant_only', 'Single Tenant Backup'), ('configuration', 'Configuration Backup'), ('snapshot', 'Temporary Snapshot')], max_length=20, verbose_name='Backup Type')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('failed', 'Failed'), ('corrupted', 'Corrupted'), ('expired', 'Expired')], default='pending', max_length=20, verbose_name='Status')),
                ('frequency', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('manual', 'Manual'), ('snapshot', 'Snapshot')], default='manual', max_length=20, verbose_name='Frequency')),
                ('tenant_schema', models.CharField(blank=True, help_text='Schema name for tenant-specific backups', max_length=100, null=True, verbose_name='Tenant Schema')),
                ('tenant_domain', models.CharField(blank=True, help_text='Domain name for tenant identification', max_length=100, null=True, verbose_name='Tenant Domain')),
                ('file_path', models.CharField(help_text='Path to backup file in storage', max_length=500, verbose_name='File Path')),
                ('file_size', models.BigIntegerField(blank=True, help_text='Size of backup file in bytes', null=True, verbose_name='File Size (bytes)')),
                ('is_encrypted', models.BooleanField(default=True, help_text='Whether the backup file is encrypted', verbose_name='Is Encrypted')),
                ('encryption_key_hash', models.CharField(blank=True, help_text='SHA-256 hash of encryption key for verification', max_length=128, verbose_name='Encryption Key Hash')),
                ('file_hash', models.CharField(blank=True, help_text='SHA-256 hash of backup file for integrity verification', max_length=128, verbose_name='File Hash')),
                ('stored_in_primary', models.BooleanField(default=False, help_text='Whether backup is stored in Cloudflare R2', verbose_name='Stored in Primary Storage')),
                ('stored_in_secondary', models.BooleanField(default=False, help_text='Whether backup is stored in Backblaze B2', verbose_name='Stored in Secondary Storage')),
                ('started_at', models.DateTimeField(blank=True, null=True, verbose_name='Started At')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Completed At')),
                ('expires_at', models.DateTimeField(blank=True, help_text='When this backup should be automatically deleted', null=True, verbose_name='Expires At')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional backup metadata and statistics', verbose_name='Metadata')),
                ('error_message', models.TextField(blank=True, help_text='Error details if backup failed', verbose_name='Error Message')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.CharField(blank=True, help_text='User or system that initiated the backup', max_length=150, verbose_name='Created By')),
            ],
            options={
                'verbose_name': 'Backup Record',
                'verbose_name_plural': 'Backup Records',
                'db_table': 'core_backup_record',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['backup_type', 'status'], name='core_backup_backup__ef5482_idx'), models.Index(fields=['tenant_schema'], name='core_backup_tenant__9aacc7_idx'), models.Index(fields=['created_at'], name='core_backup_created_ebc366_idx'), models.Index(fields=['expires_at'], name='core_backup_expires_a9cffd_idx')],
            },
        ),
        migrations.CreateModel(
            name='BackupIntegrityCheck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_type', models.CharField(default='hash_verification', help_text='Type of integrity check performed', max_length=50, verbose_name='Check Type')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('passed', 'Passed'), ('failed', 'Failed'), ('error', 'Error')], default='pending', max_length=20, verbose_name='Status')),
                ('started_at', models.DateTimeField(blank=True, null=True, verbose_name='Started At')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Completed At')),
                ('expected_hash', models.CharField(blank=True, max_length=128, verbose_name='Expected Hash')),
                ('actual_hash', models.CharField(blank=True, max_length=128, verbose_name='Actual Hash')),
                ('file_size_verified', models.BigIntegerField(blank=True, null=True, verbose_name='File Size Verified')),
                ('error_message', models.TextField(blank=True, verbose_name='Error Message')),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name='Check Metadata')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('backup_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='integrity_checks', to='core.backuprecord', verbose_name='Backup Record')),
            ],
            options={
                'verbose_name': 'Backup Integrity Check',
                'verbose_name_plural': 'Backup Integrity Checks',
                'db_table': 'core_backup_integrity_check',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['backup_record', 'status'], name='core_backup_backup__10147b_idx'), models.Index(fields=['created_at'], name='core_backup_created_5fbef0_idx')],
            },
        ),
    ]
