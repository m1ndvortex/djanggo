# Generated by Django 4.2.24 on 2025-09-21 17:17

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('pos', '0001_initial'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='posofflinestorage',
            name='synced_transaction',
        ),
        migrations.AddField(
            model_name='posofflinestorage',
            name='conflict_data',
            field=models.JSONField(blank=True, default=dict, help_text='Data about sync conflicts for resolution', verbose_name='Conflict Data'),
        ),
        migrations.AddField(
            model_name='posofflinestorage',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created By'),
        ),
        migrations.AddField(
            model_name='posofflinestorage',
            name='device_name',
            field=models.CharField(blank=True, help_text='Human-readable device name', max_length=100, verbose_name='Device Name'),
        ),
        migrations.AddField(
            model_name='posofflinestorage',
            name='has_conflicts',
            field=models.BooleanField(default=False, help_text='Whether this transaction has sync conflicts', verbose_name='Has Conflicts'),
        ),
        migrations.AddField(
            model_name='posofflinestorage',
            name='max_retry_attempts',
            field=models.PositiveIntegerField(default=3, verbose_name='Max Retry Attempts'),
        ),
        migrations.AddField(
            model_name='posofflinestorage',
            name='sync_attempted_at',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Sync Attempted At'),
        ),
        migrations.AddField(
            model_name='posofflinestorage',
            name='sync_retry_count',
            field=models.PositiveIntegerField(default=0, verbose_name='Sync Retry Count'),
        ),
        migrations.AddField(
            model_name='posofflinestorage',
            name='sync_status',
            field=models.CharField(choices=[('pending', 'Pending Sync'), ('syncing', 'Syncing'), ('synced', 'Synced'), ('failed', 'Sync Failed'), ('conflict', 'Sync Conflict')], default='pending', max_length=20, verbose_name='Sync Status'),
        ),
        migrations.AddField(
            model_name='posofflinestorage',
            name='synced_transaction_id',
            field=models.UUIDField(blank=True, help_text='ID of the transaction created after successful sync', null=True, verbose_name='Synced Transaction ID'),
        ),
        migrations.AddField(
            model_name='posofflinestorage',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated', verbose_name='Updated At'),
        ),
        migrations.AddField(
            model_name='posofflinestorage',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated By'),
        ),
        migrations.AlterField(
            model_name='posofflinestorage',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, help_text='Timestamp when the record was created', verbose_name='Created At'),
        ),
        migrations.AlterField(
            model_name='posofflinestorage',
            name='device_id',
            field=models.CharField(blank=True, help_text='Identifier of the device that created this offline transaction', max_length=100, verbose_name='Device ID'),
        ),
        migrations.AlterField(
            model_name='posofflinestorage',
            name='is_synced',
            field=models.BooleanField(default=False, help_text='Whether this transaction has been successfully synced', verbose_name='Is Synced'),
        ),
        migrations.AlterField(
            model_name='posofflinestorage',
            name='storage_id',
            field=models.UUIDField(default=uuid.uuid4, help_text='Unique identifier for offline storage', unique=True, verbose_name='Storage ID'),
        ),
        migrations.AlterField(
            model_name='posofflinestorage',
            name='transaction_data',
            field=models.JSONField(help_text='Complete transaction data stored for offline processing', verbose_name='Transaction Data'),
        ),
        migrations.AddIndex(
            model_name='posofflinestorage',
            index=models.Index(fields=['sync_status'], name='pos_posoffl_sync_st_c2ed44_idx'),
        ),
    ]
